% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nw_circular_mixed.R
\name{nw_circular_mixed}
\alias{nw_circular_mixed}
\title{Nadaraya-Watson Circular Regression Estimator with Mixed Predictors}
\usage{
nw_circular_mixed(
  x0,
  z0,
  X,
  Z,
  theta,
  h,
  lambda,
  kernel_continuous,
  kernel_categorical,
  kernel_levels = NULL
)
}
\arguments{
\item{x0}{Numeric vector of length \code{k}, values of the continuous predictors at the target point.}

\item{z0}{Vector of length \code{p}, values of the categorical predictors at the target point.}

\item{X}{Numeric matrix of size \code{n x k} with the continuous predictors.}

\item{Z}{Data frame or matrix of size \code{n x p} with the categorical predictors.}

\item{theta}{Numeric vector of length \code{n}, circular responses in radians.}

\item{h}{Numeric vector of bandwidths for the continuous predictors (length \code{k}).}

\item{lambda}{Numeric vector of smoothing parameters for the categorical predictors (length \code{p}).}

\item{kernel_continuous}{Function to use as kernel for continuous covariates (e.g., \code{gaussian_kernel}).}

\item{kernel_categorical}{Function to use as kernel for categorical covariates (e.g., \code{aitchison_aitken_kernel}, \code{ordinal_kernel}).}

\item{kernel_levels}{Optional list of factor levels for each categorical variable (only needed for ordinal kernels).}
}
\value{
A numeric scalar: estimated circular regression value at \code{(x0, z0)}, in radians.
}
\description{
Computes the circular nonparametric regression estimate at a given point
using a product-kernel Nadaraya-Watson estimator with both continuous and categorical covariates.
}
\examples{
set.seed(1)
X <- matrix(runif(30), ncol = 1)
Z <- data.frame(group = sample(c("A", "B", "C"), 30, replace = TRUE))
theta <- runif(30, 0, 2 * pi)
x0 <- c(0.5)
z0 <- c("B")
h <- 0.2
lambda <- 0.3

gaussian_kernel <- function(u) exp(-0.5 * u^2) / sqrt(2 * pi)

aitchison_aitken_kernel <- function(z, zi, lambda, levels = NULL) {
  z <- as.character(z)
  zi <- as.character(zi)
  if (is.null(levels)) levels <- sort(unique(c(z, zi)))
  if (!(z \%in\% levels) || !(zi \%in\% levels)) return(0)
  k <- length(levels)
  if (z == zi) return(1 - lambda) else return(lambda / (k - 1))
}

nw_circular_mixed(
  x0, z0, X, Z, theta, h, lambda,
  kernel_continuous = gaussian_kernel,
  kernel_categorical = aitchison_aitken_kernel,
  kernel_levels = list(c("A", "B", "C"))
)

}
