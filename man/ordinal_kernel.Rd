% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ordinal_kernel.R
\name{ordinal_kernel}
\alias{ordinal_kernel}
\title{Ordinal Kernel with Explicit Level Handling}
\usage{
ordinal_kernel(z, z_i, lambda, levels)
}
\arguments{
\item{z}{A factor or character scalar representing the target level.}

\item{z_i}{A factor or character scalar representing the data level to compare with \code{z}.}

\item{lambda}{A smoothing parameter in the interval (0, 1). Higher values yield sharper decay.}

\item{levels}{A character vector with the full ordered list of levels (e.g., \code{c("Low", "Medium", "High")}).}
}
\value{
A scalar kernel weight in \eqn{(0, 1]}.
Returns \code{0} and a warning if either level is not present in the specified \code{levels}.
}
\description{
Computes the value of an ordinal kernel between two categorical values \code{z} and \code{z_i},
where the similarity decays geometrically with the absolute distance between their positions
in a user-defined ordered scale.
}
\details{
This kernel is particularly useful when the categorical variable has an intrinsic order
(e.g., "Low", "Medium", "High") and you want smoother transitions between adjacent levels.
}
\examples{
# Define an ordinal scale
L <- c("Low", "Medium", "High")

# Same level → weight = 1
ordinal_kernel("Low", "Low", lambda = 0.3, levels = L)

# One level apart → weight = (1 - lambda)^1
ordinal_kernel("Low", "Medium", lambda = 0.3, levels = L)

# Two levels apart → weight = (1 - lambda)^2
ordinal_kernel("Low", "High", lambda = 0.3, levels = L)

# If level not in `levels` → warning and 0
ordinal_kernel("Low", "Extreme", lambda = 0.3, levels = L)

}
