% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LL_kernel_weights.R
\name{LL_kernel_weights}
\alias{LL_kernel_weights}
\title{Compute local linear kernel weights for circular regression with mixed predictors}
\usage{
LL_kernel_weights(
  x0,
  X,
  z0,
  Z,
  h,
  lambda,
  kernel_continuous,
  kernel_categorical,
  levels_list = NULL
)
}
\arguments{
\item{x0}{Numeric vector of length \eqn{k}, continuous predictors at the target point.}

\item{X}{Numeric matrix of size \eqn{n \times k}, continuous predictors for all observations.}

\item{z0}{Vector of length \eqn{p}, categorical predictors at the target point.}

\item{Z}{Data frame or matrix of size \eqn{n \times p}, categorical predictors for all observations.}

\item{h}{Numeric vector of bandwidths for the continuous variables.}

\item{lambda}{Numeric vector of smoothing parameters for the categorical variables.}

\item{kernel_continuous}{Univariate kernel function for continuous variables (e.g., \code{dnorm}).}

\item{kernel_categorical}{Kernel function for categorical variables (e.g., \code{ordinal_kernel}).}

\item{levels_list}{Optional list of level sets for each categorical variable (required for ordinal kernels).}
}
\value{
A numeric vector of length \code{n} with the normalized local linear kernel weights.
}
\description{
Computes normalized local linear kernel weights for a given target point
\eqn{(x_0, z_0)}, using continuous and categorical predictors. The estimator
applies a local linear correction to the continuous covariates and standard
kernel smoothing to the categorical covariates.
}
\examples{
set.seed(42)
X <- matrix(runif(30), ncol = 1)
Z <- data.frame(condition = sample(c("Low", "Medium", "High"), 30, replace = TRUE))
x0 <- 0.5
z0 <- "Medium"
h <- 0.2
lambda <- 0.3

gaussian_kernel <- function(u) exp(-0.5 * u^2) / sqrt(2 * pi)

ordinal_kernel <- function(z, zi, lambda, levels) {
  z <- as.character(z)
  zi <- as.character(zi)
  d <- abs(match(z, levels) - match(zi, levels))
  return((1 - lambda)^d)
}

levels_list <- list(c("Low", "Medium", "High"))

LL_kernel_weights(
  x0 = x0, X = X, z0 = z0, Z = Z,
  h = h, lambda = lambda,
  kernel_continuous = gaussian_kernel,
  kernel_categorical = ordinal_kernel,
  levels_list = levels_list
)

}
