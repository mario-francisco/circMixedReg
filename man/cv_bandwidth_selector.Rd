% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_bandwidth_selector.R
\name{cv_bandwidth_selector}
\alias{cv_bandwidth_selector}
\title{Cross-Validation Bandwidth Selector for Circular Regression (NW or LL)}
\usage{
cv_bandwidth_selector(
  data,
  response_col = "theta",
  cont_cols = NULL,
  cat_cols = NULL,
  kernel_continuous = gaussian_kernel,
  kernel_categorical = aitchison_aitken_kernel,
  h_grid = NULL,
  lambda_grid = NULL,
  estimator = "NW",
  kernel_levels = NULL,
  verbose = TRUE
)
}
\arguments{
\item{data}{A data frame with the sample, including the circular response and predictors.}

\item{response_col}{Name of the circular response variable (in radians). Default: "theta".}

\item{cont_cols}{Character vector with names of continuous predictors (optional).}

\item{cat_cols}{Character vector with names of categorical predictors (optional).}

\item{kernel_continuous}{Kernel function for continuous predictors (default: \code{gaussian_kernel}).}

\item{kernel_categorical}{Kernel function for categorical predictors (default: \code{aitchison_aitken_kernel}).}

\item{h_grid}{Optional list of candidate bandwidth vectors for continuous variables. If NULL, defaults are created.}

\item{lambda_grid}{Optional list of candidate lambda vectors for categorical variables. If NULL, defaults are created.}

\item{estimator}{Either \code{"NW"} (default) or \code{"LL"} indicating the regression estimator to use.}

\item{kernel_levels}{Optional list of level vectors for each categorical predictor (required for ordinal kernels).}

\item{verbose}{Logical; if TRUE, prints progress messages (default: TRUE).}
}
\value{
A list with:
\item{h_cv}{Selected bandwidths for continuous predictors.}
\item{lambda_cv}{Selected lambdas for categorical predictors.}
\item{cv_error}{Minimum cross-validation error.}
\item{cv_grid}{Data frame of all grid combinations.}
\item{error_grid}{Vector of CV errors per grid point.}
}
\description{
Selects optimal bandwidths for a circular regression model with mixed-type predictors
using leave-one-out cross-validation (LOOCV), minimizing the circular prediction error.
}
\details{
Compatible with both Nadaraya-Watson ("NW") and local linear ("LL") estimators.
}
\examples{
set.seed(123)
n <- 50
x <- runif(n)
z <- sample(c("A", "B", "C"), n, replace = TRUE)
mu <- function(x, z) {
  if (z == "A") return(pi * x)
  if (z == "B") return(pi / 2 * x + pi / 4)
  return(pi * (1 - x))
}
theta <- sapply(1:n, function(i) {
  (mu(x[i], z[i]) + circular::rvonmises(1, mu = circular::circular(0), kappa = 4)) \%\% (2 * pi)
})
data <- data.frame(x = x, z = z, theta = theta)

# Run CV selector for NW
result_nw <- cv_bandwidth_selector(
  data = data,
  response_col = "theta",
  cont_cols = "x",
  cat_cols = "z",
  estimator = "NW",
  kernel_levels = list(z = c("A", "B", "C")),
  verbose = FALSE
)

# Run CV selector for LL
result_ll <- cv_bandwidth_selector(
  data = data,
  response_col = "theta",
  cont_cols = "x",
  cat_cols = "z",
  estimator = "LL",
  kernel_levels = list(z = c("A", "B", "C")),
  verbose = FALSE
)

print(result_nw$h_cv)
print(result_ll$h_cv)

}
