% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_circular_mixed.R
\name{predict_circular_mixed}
\alias{predict_circular_mixed}
\title{Predict Circular Regression with Mixed Predictors (NW or LL)}
\usage{
predict_circular_mixed(
  data,
  new_data,
  response_col = "theta",
  cont_cols = NULL,
  cat_cols = NULL,
  h = 0.5,
  lambda = 0.5,
  kernel_continuous = gaussian_kernel,
  kernel_categorical = aitchison_aitken_kernel,
  kernel_levels = NULL,
  estimator = "NW",
  leave_one_out = FALSE
)
}
\arguments{
\item{data}{Data frame containing the original dataset with predictors and response.}

\item{new_data}{Data frame with the values of the predictors at which to make predictions.}

\item{response_col}{Name of the column with the circular response (default: \code{"theta"}).}

\item{cont_cols}{Character vector with the names of the continuous predictors.}

\item{cat_cols}{Character vector with the names of the categorical predictors.}

\item{h}{Bandwidth(s) for the continuous variables (scalar or vector).}

\item{lambda}{Smoothing parameter(s) for the categorical variables (scalar or vector).}

\item{kernel_continuous}{Kernel function for continuous predictors.}

\item{kernel_categorical}{Kernel function for categorical predictors.}

\item{kernel_levels}{Optional list of level vectors (for ordinal or other kernels requiring level info).}

\item{estimator}{Character string: either \code{"NW"} (default) or \code{"LL"}.}

\item{leave_one_out}{Logical. If TRUE and \code{data == new_data}, applies leave-one-out strategy.}
}
\value{
A vector of predicted circular values (class \code{circular}) at the new points.
}
\description{
General wrapper to predict values from a circular regression model with mixed predictors
using either Nadaraya-Watson or local linear kernel smoothing.
}
\examples{
set.seed(123)
n <- 100
x <- runif(n)
z <- sample(c("A", "B", "C"), n, replace = TRUE)
mu <- function(x, z) ifelse(z == "A", sin(2 * pi * x),
                       ifelse(z == "B", cos(2 * pi * x),
                       2 * pi * x \%\% (2 * pi)))
theta <- (mu(x, z) + circular::rvonmises(n, mu = circular::circular(0), kappa = 3)) \%\% (2 * pi)
data <- data.frame(x = x, z = z, theta = theta)

preds_nw <- predict_circular_mixed(
  data = data, new_data = data,
  cont_cols = "x", cat_cols = "z",
  h = 0.3, lambda = 0.4,
  estimator = "NW"
)

preds_ll <- predict_circular_mixed(
  data = data, new_data = data,
  cont_cols = "x", cat_cols = "z",
  h = 0.3, lambda = 0.4,
  estimator = "LL"
)

mean(1 - cos(theta - preds_nw))  # CMASE NW
mean(1 - cos(theta - preds_ll))  # CMASE LL

}
