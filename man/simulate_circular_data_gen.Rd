% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_circular_data_gen.R
\name{simulate_circular_data_gen}
\alias{simulate_circular_data_gen}
\title{Simulate Circular Regression Data with Mixed Predictors (1 or 2 continuous + 1 categorical)}
\usage{
simulate_circular_data_gen(
  n,
  mu_fun,
  kappa = 4,
  x_range = c(0, 1),
  w_range = NULL,
  z_levels = c("A", "B", "C"),
  seed = NULL
)
}
\arguments{
\item{n}{Integer. Sample size (number of observations).}

\item{mu_fun}{A function of x, z, and optionally w, returning the true mean direction (angle in radians).}

\item{kappa}{Numeric. Concentration parameter of the von Mises error distribution.}

\item{x_range}{Numeric vector of length 2. Range for the first continuous predictor.}

\item{w_range}{Optional numeric vector of length 2. Range for the second continuous predictor. If NULL, only one continuous predictor is used.}

\item{z_levels}{Character vector. Levels for the categorical predictor.}

\item{seed}{Optional integer. Random seed for reproducibility.}
}
\value{
A data.frame with columns:
\describe{
\item{theta}{Observed circular response (radians, in \code{[0, 2pi)}).}
\item{X}{First continuous predictor.}
\item{Z}{Categorical predictor (factor).}
\item{W}{Second continuous predictor (if applicable).}
\item{mu}{True mean direction (radians, in \code{[0, 2pi)}).}
}
}
\description{
Generates a synthetic dataset for circular regression with one or two continuous predictors and one categorical predictor.
}
\examples{
# Example with one continuous predictor (X)
mu_fun1 <- function(x, z) {
  offset <- switch(z, A = 0, B = pi/2, C = pi)
  (offset + 2 * pi * x) \%\% (2 * pi)
}
sim1 <- simulate_circular_data_gen(n = 100, mu_fun = mu_fun1, kappa = 5)

# Example with two continuous predictors (X and W)
mu_fun2 <- function(x, z, w) {
  base <- switch(z, A = 0, B = pi/2, C = pi)
  (base + 2 * pi * x + pi * w) \%\% (2 * pi)
}
sim2 <- simulate_circular_data_gen(n = 100, mu_fun = mu_fun2,
                               kappa = 5, w_range = c(0, 1))

}
